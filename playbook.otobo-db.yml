---
- name: configure local machine for me
  hosts: all
  become: yes

  vars_prompt:
    
    - name: mysql_password
      prompt: MySQL password
      default: root

  tasks:
  
  - name: disable ubuntu apparmor
    service:
      name: apparmor
      enabled: no
      state: stopped

  - name: install gnupg
    apt: 
      name: gnupg
  
  - name: pre configure mysql apt config repo distro
    debconf:
      name: mysql-apt-config
      question: mysql-apt-config/repo-distro
      value: debian
      vtype: select

  - name: pre configure mysql apt config select server
    debconf:
      name: mysql-apt-config
      question: mysql-apt-config/select-server
      value: mysql-5.7
      vtype: select

  - name: pre configure mysql apt config select product
    debconf:
      name: mysql-apt-config
      question: mysql-apt-config/select-product
      value: Ok
      vtype: select

  - name: pre configure mysql community server root pass
    debconf:
      name: mysql-community-server
      question: mysql-community-server/root-pass
      value: "{{ mysql_password }}"
      vtype: password
    no_log: true

  - name: pre configure mysql community server re root pass
    debconf:
      name: mysql-community-server
      question: mysql-community-server/re-root-pass
      value: "{{ mysql_password }}"
      vtype: password
    no_log: true

#  - name: pre configure mysql community server data dir
#    debconf:
#      name: mysql-community-server
#      question: mysql-community-server/data-dir
#      value: 
#      vtype: note
#
#  - name: set selections for mysql-apt-config
#    shell: |
#      debconf-set-selections <<< 'mysql-apt-config mysql-apt-config/repo-distro select debian'
#      debconf-set-selections <<< 'mysql-apt-config mysql-apt-config/select-server select mysql-5.7'
#      debconf-set-selections <<< 'mysql-apt-config mysql-apt-config/select-product select Ok'
#      debconf-set-selections <<< 'mysql-community-server mysql-community-server/root-pass password {{ mysql_password }}'
#      debconf-set-selections <<< 'mysql-community-server mysql-community-server/re-root-pass password {{ mysql_password }}'
#      debconf-set-selections <<< 'mysql-community-server mysql-community-server/data-dir'
#
  - name: install mysql-apt-config
    apt: 
      deb: https://dev.mysql.com/get/mysql-apt-config_0.8.16-1_all.deb
    environment:
      DEBIAN_FRONTEND: noninteractive

  - name: update apt cache
    apt:
      update_cache: yes

  - name: install mysql-server
    apt: 
      name: mysql-server
      state: present
    environment:
      DEBIAN_FRONTEND: noninteractive

  - name: install expect module dependencies
    apt:
      name: 
      - python3-pip
      - virtualenv

  - name: install expect python dependecies
    pip:
      name: 
      - pexpect
      - setuptools

  - name: change mysql root authentication to native
    expect: 
      command: mysql -u root -p -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '{{ mysql_password }}';"
      responses:
        (?i)password: "{{ mysql_password }}"
#    no_log: true

#  - name: create mysql remote root user
#    expect: 
#      command: mysql -u root -p -e "CREATE USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '{{ mysql_password }};"
#      responses:
#        (?i)password: "{{ mysql_password }}"
#    no_log: true
#
#  - name: create mysql remote root user
#    expect: 
#      command: mysql -u root -p -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;"
#      responses:
#        (?i)password: "{{ mysql_password }}"
#    no_log: true
#
  - name: install pymysql
    apt:
      name: python3-pymysql

  - name: create mysql remote root user
    community.mysql.mysql_user:
      login_user: root
      login_password: "{{ mysql_password }}"
      name: root
      host: "%"
      password: "{{ mysql_password }}"
      priv:
        '*.*': 'ALL,GRANT'
      append_privs: yes

  - name: configure mysqld variables
    blockinfile:
      path: /etc/mysql/conf.d/mysql.cnf
      marker: "# {mark} MYSQLD VARIABLES"
      insertafter: EOF
      block: |
        [mysqld]
        max_allowed_packet = 64M
        innodb_log_file_size = 256M
        query_cache_size = 32M

  - name: configure mysqldump variables
    blockinfile:
      path: /etc/mysql/conf.d/mysqldump.cnf
      marker: "# {mark} MYSQLDUMP VARIABLES"
      insertafter: EOF
      block: |
        max_allowed_packet = 64M

  - name: allow remote connections
    lineinfile:
      path: /etc/mysql/mysql.conf.d/mysqld.cnf
      regexp: '^bind-address.*$'
      line: '#bind-address = 127.0.0.1'
      state: present

  - name: restart mysql service
    service:
      name: mysql
      enabled: yes
      state: restarted
